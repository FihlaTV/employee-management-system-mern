{"version":3,"sources":["../../../server/config/strategies/local.js"],"names":["passport","require","LocalStrategy","Strategy","User","model","module","exports","use","username","password","done","findOne","err","user","message","authenticate"],"mappings":"AAAA;AACA;;AAEA;;AACA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AAAA,IACCC,gBAAgBD,QAAQ,gBAAR,EAA0BE,QAD3C;AAAA,IAECC,OAAOH,QAAQ,UAAR,EAAoBI,KAApB,CAA0B,MAA1B,CAFR;;AAIA;AACAC,OAAOC,OAAP,GAAiB,YAAW;AAC3B;AACAP,UAASQ,GAAT,CAAa,IAAIN,aAAJ,CAAkB,UAASO,QAAT,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACjE;AACAP,OAAKQ,OAAL,CAAa;AACZH,aAAUA;AADE,GAAb,EAEG,UAASI,GAAT,EAAcC,IAAd,EAAoB;AACtB;AACA,OAAID,GAAJ,EAAS;AACR,WAAOF,KAAKE,GAAL,CAAP;AACA;;AAED;AACA,OAAI,CAACC,IAAL,EAAW;AACV,WAAOH,KAAK,IAAL,EAAW,KAAX,EAAkB;AACxBI,cAAS;AADe,KAAlB,CAAP;AAGA;;AAED;AACA,OAAI,CAACD,KAAKE,YAAL,CAAkBN,QAAlB,CAAL,EAAkC;AACjC,WAAOC,KAAK,IAAL,EAAW,KAAX,EAAkB;AACxBI,cAAS;AADe,KAAlB,CAAP;AAGA;;AAED;AACA,UAAOJ,KAAK,IAAL,EAAWG,IAAX,CAAP;AACA,GAxBD;AAyBA,EA3BY,CAAb;AA4BA,CA9BD","file":"local.js","sourcesContent":["// Invoke 'strict' JavaScript mode\n'use strict';\n\n// Load the module dependencies\nvar passport = require('passport'),\n\tLocalStrategy = require('passport-local').Strategy,\n\tUser = require('mongoose').model('User');\n\n// Create the Local strategy configuration method\nmodule.exports = function() {\n\t// Use the Passport's Local strategy \n\tpassport.use(new LocalStrategy(function(username, password, done) {\n\t\t// Use the 'User' model 'findOne' method to find a user with the current username\n\t\tUser.findOne({\n\t\t\tusername: username\n\t\t}, function(err, user) {\n\t\t\t// If an error occurs continue to the next middleware\n\t\t\tif (err) {\n\t\t\t\treturn done(err);\n\t\t\t}\n\t\t\t\n\t\t\t// If a user was not found, continue to the next middleware with an error message\n\t\t\tif (!user) {\n\t\t\t\treturn done(null, false, {\n\t\t\t\t\tmessage: 'Unknown user'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the passport is incorrect, continue to the next middleware with an error message\n\t\t\tif (!user.authenticate(password)) {\n\t\t\t\treturn done(null, false, {\n\t\t\t\t\tmessage: 'Invalid password'\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Otherwise, continue to the next middleware with the user object\n\t\t\treturn done(null, user);\n\t\t});\n\t}));\n};"]}