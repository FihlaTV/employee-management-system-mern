{"version":3,"sources":["../server/server.js"],"names":["app","Promise","global","connect","db","uri","options","then","connection","listen","process","env","PORT","server","port","console","log","get","catch","error"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAGA,MAAMA,MAAM,wBAAZ;AANA;;;AAQA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACA,mBAASE,OAAT,CAAiB,iBAAOC,EAAP,CAAUC,GAA3B,EAAgC,iBAAOD,EAAP,CAAUE,OAA1C,EAAmDC,IAAnD,CAAwDC,cAAc;AAClER,QAAIS,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,MAAP,CAAcC,IAA7C,EAAmD,MAAM;AACrD;AACAC,gBAAQC,GAAR,CAAY,4CAAZ,EAA0D,iBAAOF,IAAjE,EAAuEd,IAAIiB,GAAJ,CAAQ,KAAR,CAAvE;AACH,KAHD;AAIH,CALD,EAKGC,KALH,CAKSC,SAAS;AACdJ,YAAQC,GAAR,CAAY,QAAZ,EAAsBG,KAAtB;AACH,CAPD,EAOG","file":"server.js","sourcesContent":["import express from './config/express';\n// import mongoose from './config/mongoose';\nimport mongoose from \"mongoose\";\nimport config from './config';\nimport 'babel-polyfill';\n\n\nconst app = express();\n\nmongoose.Promise = global.Promise;\nmongoose.connect(config.db.uri, config.db.options).then(connection => {\n    app.listen(process.env.PORT || config.server.port, () => {\n        // console.log('App started on port ' + config.server.port);\n        console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n    });\n}).catch(error => {\n    console.log('ERROR:', error);\n});;\n"]}