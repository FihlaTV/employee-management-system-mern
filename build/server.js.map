{"version":3,"sources":["../server/server.js"],"names":["process","env","NODE_ENV","app","Promise","global","connect","db","uri","options","then","connection","listen","server","port","catch","error","console","log"],"mappings":";;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AANAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuBF,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,aAA/C;AAGA;;;AAMA,MAAMC,MAAM,wBAAZ;;AAEA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACA,mBAASE,OAAT,CAAiB,iBAAOC,EAAP,CAAUC,GAA3B,EAAgC,iBAAOD,EAAP,CAAUE,OAA1C,EAAmDC,IAAnD,CAAwDC,cAAc;AAClER,QAAIS,MAAJ,CAAW,iBAAOC,MAAP,CAAcC,IAAzB,EAA+B,MAAM;AACjC;AACH,KAFD;AAGH,CAJD,EAIGC,KAJH,CAISC,SAAS;AACdC,YAAQC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACH,CAND,EAMG","file":"server.js","sourcesContent":["process.env.NODE_ENV = process.env.NODE_ENV || 'development';\n\nimport express from './config/express';\n// import mongoose from './config/mongoose';\nimport mongoose from \"mongoose\";\nimport config from './config';\nimport 'babel-polyfill';\n\n\nconst app = express();\n\nmongoose.Promise = global.Promise;\nmongoose.connect(config.db.uri, config.db.options).then(connection => {\n    app.listen(config.server.port, () => {\n        // console.log('App started on port ' + config.server.port);\n    });\n}).catch(error => {\n    console.log('ERROR:', error);\n});;\n"]}