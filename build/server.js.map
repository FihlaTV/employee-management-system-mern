{"version":3,"sources":["../server/server.js"],"names":["port","process","env","PORT","server","Promise","global","connect","db","uri","options","then","connection","listen","console","log","get","catch","error"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA,MAAMA,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,MAAP,CAAcJ,IAA/C;AACA,MAAMI,SAAS,wBAAf;;AAEA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACA,mBAASE,OAAT,CAAiB,iBAAOC,EAAP,CAAUC,GAA3B,EAAgC,iBAAOD,EAAP,CAAUE,OAA1C,EAAmDC,IAAnD,CAAwDC,cAAc;AAClER,WAAOS,MAAP,CAAcb,IAAd,EAAoB,MAAM;AACtBc,gBAAQC,GAAR,CAAY,4CAAZ,EAA0Df,IAA1D,EAAgEI,OAAOY,GAAP,CAAW,KAAX,CAAhE;AACH,KAFD;AAGH,CAJD,EAIGC,KAJH,CAISC,SAAS;AACdJ,YAAQC,GAAR,CAAY,QAAZ,EAAsBG,KAAtB;AACH,CAND,EAMG","file":"server.js","sourcesContent":["import express from './config/express';\nimport mongoose from \"mongoose\";\nimport config from './config';\nimport 'babel-polyfill';\n\n\nconst port = process.env.PORT || config.server.port;\nconst server = express();\n\nmongoose.Promise = global.Promise;\nmongoose.connect(config.db.uri, config.db.options).then(connection => {\n    server.listen(port, () => {\n        console.log('Express server listening on %d, in %s mode', port, server.get('env'));\n    });\n}).catch(error => {\n    console.log('ERROR:', error);\n});;\n\n"]}