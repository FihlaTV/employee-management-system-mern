{"version":3,"sources":["../../server/config/express.js"],"names":["install","module","exports","db","app","use","static","json","get"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;;;AALA,2BAAiBA,OAAjB;;AAQAC,OAAOC,OAAP,GAAiB,UAAUC,EAAV,EAAc;AAC3B,UAAMC,MAAM,wBAAZ;AACAA,QAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAF,QAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAEA;AACAH,QAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACA;AACAD,QAAII,GAAJ,CAAQ,GAAR;AACAJ,QAAIC,GAAJ,CAAQ,YAAR;AACAD,QAAIC,GAAJ,CAAQ,iBAAR;AACAD,QAAIC,GAAJ,CAAQ,eAAR;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,WAAOD,GAAP;AACH,CAvCD","file":"express.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport morgan from \"morgan\"\nimport path from 'path';\nimport SourceMapSupport from 'source-map-support';\nSourceMapSupport.install();\n\nimport issue from '../routes/issue';\nimport index from '../routes/index';\nimport department from '../routes/department';\nimport employee from '../routes/employee';\n\n\nmodule.exports = function (db) {\n    const app = express();\n    app.use(express.static('static'));\n    app.use(bodyParser.json());\n\n    //use logger\n    app.use(morgan(\"dev\"));\n\n    //add routes\n    // It has to be placed at the end of all routes\n    app.get('/', index);\n    app.use('/api/issue', issue);\n    app.use('/api/department', department);\n    app.use('/api/employee', employee);\n\n\n    // if (process.env.NODE_ENV !== 'production') {\n    //     // import only support top level\n    //     const webpack = require('webpack');\n    //     const webpackDevMiddleware = require('webpack-dev-middleware');\n    //     const webpackHotMiddleware = require('webpack-hot-middleware');\n\n    //     const config = require('../../webpack.dev');\n    //     config.entry.app.push('webpack-hot-middleware/client', 'webpack/hot/only-dev-server');\n    //     config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n    //     const compiler = webpack(config);\n    //     app.use(webpackDevMiddleware(compiler, {\n    //         noInfo: true\n    //     }));\n    //     app.use(webpackHotMiddleware(compiler, {\n    //         log: console.log\n    //     }));\n\n    //     // console.log('Enable webpackDevMiddleware and webpackHotMiddleware');\n    // }\n\n\n    return app;\n}\n"]}