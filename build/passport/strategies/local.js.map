{"version":3,"sources":["../../../server/passport/strategies/local.js"],"names":["passport","require","LocalStrategy","Strategy","module","exports","use","username","password","done","findOne","err","user","message","authenticate"],"mappings":"AAAA;AACA;;AAEA;;AAGA;;;;;;AAFA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AAAA,IACCC,gBAAgBD,QAAQ,gBAAR,EAA0BE,QAD3C;;;AAIA;AACAC,OAAOC,OAAP,GAAiB,YAAY;AAC5B;AACAL,UAASM,GAAT,CAAa,IAAIJ,aAAJ,CAAkB,UAAUK,QAAV,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoC;AAClE;AACA,iBAAKC,OAAL,CAAa;AACZH,aAAUA;AADE,GAAb,EAEG,UAAUI,GAAV,EAAeC,IAAf,EAAqB;AACvB;AACA,OAAID,GAAJ,EAAS;AACR,WAAOF,KAAKE,GAAL,CAAP;AACA;;AAED;AACA,OAAI,CAACC,IAAL,EAAW;AACV,WAAOH,KAAK,IAAL,EAAW,KAAX,EAAkB;AACxBI,cAAS;AADe,KAAlB,CAAP;AAGA;;AAED;AACA,OAAI,CAACD,KAAKE,YAAL,CAAkBN,QAAlB,CAAL,EAAkC;AACjC,WAAOC,KAAK,IAAL,EAAW,KAAX,EAAkB;AACxBI,cAAS;AADe,KAAlB,CAAP;AAGA;;AAED;AACA,UAAOJ,KAAK,IAAL,EAAWG,IAAX,CAAP;AACA,GAxBD;AAyBA,EA3BY,CAAb;AA4BA,CA9BD","file":"local.js","sourcesContent":["// Invoke 'strict' JavaScript mode\n'use strict';\n\n// Load the module dependencies\nvar passport = require('passport'),\n\tLocalStrategy = require('passport-local').Strategy;\nimport User from \"../../models/user\";\n\n// Create the Local strategy configuration method\nmodule.exports = function () {\n\t// Use the Passport's Local strategy \n\tpassport.use(new LocalStrategy(function (username, password, done) {\n\t\t// Use the 'User' model 'findOne' method to find a user with the current username\n\t\tUser.findOne({\n\t\t\tusername: username\n\t\t}, function (err, user) {\n\t\t\t// If an error occurs continue to the next middleware\n\t\t\tif (err) {\n\t\t\t\treturn done(err);\n\t\t\t}\n\n\t\t\t// If a user was not found, continue to the next middleware with an error message\n\t\t\tif (!user) {\n\t\t\t\treturn done(null, false, {\n\t\t\t\t\tmessage: 'Unknown user'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the passport is incorrect, continue to the next middleware with an error message\n\t\t\tif (!user.authenticate(password)) {\n\t\t\t\treturn done(null, false, {\n\t\t\t\t\tmessage: 'Invalid password'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Otherwise, continue to the next middleware with the user object\n\t\t\treturn done(null, user);\n\t\t});\n\t}));\n};\n"]}